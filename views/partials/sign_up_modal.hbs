{{!-- 
======================================================
Assignment 2 - Responsive, Handlebars, Forms Processing and Email
Course:			WEB 322
Author:			David Ly
Email:			dly11@myseneca.ca
Date:			  2020-10-28
====================================================== 
--}}
<!-- ========== The Sign-UP Modal START ========== -->
<div class="modal" id="signUpModal">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content bg-light">
      <!-- Modal Header -->
      <div class="modal-header border-0">
        <h4 class="modal-title">Sign-Up for an account:</h4>
        <button type="button" class="close" data-dismiss="modal"> &times; </button>
      </div>
      <!-- Modal body -->
      <!-- ////////// FORM START //////////////////// -->
      <!-- ////////// TEST: action="https://httpbin.org/post" action="/sign-up-process" enctype="multipart/form-data" -->
      <form class="needs-validation" id="signUpForm" action="/sign-up-process" method="POST">
        <div class="modal-body">
          <div class="form-group">
            <!-- ERROR MESSAGES -->
            <div class="form-group">
              <div class="invalid-feedback-myCustom">{{{validationMsgsSU}}}</div>
            </div>
            <input type="text" class="form-control" id="su-username" placeholder="Username" name="username" />
            <div class="invalid-feedback">Username: only letters / numbers / dashes / underscores allowed.</div>
          </div>
          <div class="form-group">
            <input type="password" class="form-control" id="su-password" placeholder="Password" name="password" />
            <div class="invalid-feedback">Password must be:<br />6-12 characters, letters (at least 1 CAPITAL) and
              numbers only.</div>
          </div>
          <div class="form-group">
            <input type="email" class="form-control" id="su-email" placeholder="Email Address" name="email" />
            <div class="invalid-feedback">Please enter your complete email.</div>
          </div>
          <div class="form-group">
            <input type="text" class="form-control" id="su-fName" placeholder="First Name" name="fName" />
            <div class="invalid-feedback">First Name: only letters / numbers / dashes / underscores allowed.</div>
          </div>
          <div class="form-group">
            <input type="text" class="form-control" id="su-lName" placeholder="Last Name" name="lName" />
            <div class="invalid-feedback">Last Name: only letters / numbers / dashes / underscores allowed.</div>
          </div>
          {{!-- <div class="form-group">
            <label class="h6" for="su-birthdate">Birthdate</label>
            <p>
              <small>You must be 18+ to sign-up. Your birthdate won't be seen by other users.</small>
            </p>
            <input type="date" class="form-control" id="su-birthdate" name="birthdate" />
            <div class="invalid-feedback">Please select your birthdate.</div>
            <p>
              <small>You'll receive our promotions and policy updates via email.</small>
            </p>
          </div> --}}
        </div>
        <!-- Modal footer -->
        <div class="modal-footer border-0">
          <button type="submit" class="btn btn-success">Sign-Up</button>
        </div>
      </form>
      <!-- ////////// FORM END //////////////////// -->
      <!-- -->
      <script>

        const signUpForm = document.querySelector('#signUpForm');

        signUpForm.onsubmit = function ()
        {
          let status = true;

          clearMessagesOfInputIds(
            '#su-username',
            '#su-password',
            '#su-email',
            '#su-fName',
            '#su-lName',
            '#su-birthdate'
          );

          // function to check for nulls
          function checkForNulls(...theArgs)
          {
            theArgs.forEach(field =>
            {
              if (field.value === "")
              {
                field.classList.add('is-invalid');
                status = false;   // THIS === reason that func is in this block
              }
            });
          }
          // function to check for REGEX VIOLATION
          function checkRegEx(field, regEx)
          {
            if (!field.value.match(regEx))
            {
              field.classList.add('is-invalid');
              status = false;     // THIS === reason that func is in this block
            }
          }

          const username = document.querySelector('#su-username');
          const password = document.querySelector('#su-password');
          const email = document.querySelector('#su-email');
          const fName = document.querySelector('#su-fName');
          const lName = document.querySelector('#su-lName');
          const birthdate = document.querySelector('#su-birthdate');

          // REGEX
          const passRegEx = /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{6,12}$/;
          const emailRegEx = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
          const namesRegEx = /^[A-Za-z0-9_-]*$/;

          checkForNulls(
            username,
            password,
            email,
            fName,
            lName,
            birthdate
          );

          // check IF VIOLATES REGEX
          checkRegEx(username, namesRegEx);
          checkRegEx(password, passRegEx);
          checkRegEx(email, emailRegEx);
          checkRegEx(fName, namesRegEx);
          checkRegEx(lName, namesRegEx);

          return status;
        };

        // function to clear status messages
        function clearMessagesOfInputIds(...theArgs)
        {
          theArgs.forEach(element =>
          {
            document.querySelector(element).classList.remove('is-invalid');
          });
        }

      </script>
      <!-- -->
    </div>
  </div>
</div>
<!-- ========== The Sign-UP Modal END ========== -->
